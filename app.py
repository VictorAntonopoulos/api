import streamlit as st 
import requests
import json
import os
from dotenv import load_dotenv

# Carrega as variÃ¡veis de ambiente do arquivo .env
load_dotenv()

# ConfiguraÃ§Ãµes da API do Watson Assistant
watson_api_key = os.getenv('WATSON_API_KEY')
watson_url = 'https://api.au-syd.assistant.watson.cloud.ibm.com/v2/assistants/c6aabe50-9141-4f22-ba88-11e236849fd9/sessions'
headers = {
    'Content-Type': 'application/json',
    'Authorization': f'Bearer {watson_api_key}',
}

# FunÃ§Ã£o para enviar uma mensagem ao Watson Assistant
def send_message_to_watson(message):
    data = {
        'input': {
            'text': message
        }
    }
    response = requests.post(watson_url, headers=headers, data=json.dumps(data))
    return response.json()

# Interface do Streamlit
st.set_page_config(page_title="Chatbot GaldÃ­", layout="wide")
st.title("ğŸŒŸ Chatbot GaldÃ­ ğŸŒŸ")
st.markdown("OlÃ¡! Eu sou GaldÃ­, seu assistente virtual. Como posso ajudar vocÃª hoje?")

# Estilo para o campo de entrada
user_message = st.text_input("Digite sua mensagem para GaldÃ­:", placeholder="Escreva aqui...")

if st.button("Enviar"):
    if user_message:
        with st.spinner("GaldÃ­ estÃ¡ pensando..."):
            watson_response = send_message_to_watson(user_message)
            response_text = watson_response['output']['generic'][0]['text']
            st.success(f"GaldÃ­: {response_text}")
    else:
        st.warning("Por favor, digite uma mensagem antes de enviar.")

# EspaÃ§o para feedback ou interaÃ§Ãµes adicionais
st.sidebar.header("ğŸ’¬ InteraÃ§Ãµes Adicionais")
st.sidebar.markdown("VocÃª pode fazer perguntas sobre:")
st.sidebar.markdown("- Problemas automotivos")
st.sidebar.markdown("- ManutenÃ§Ã£o de veÃ­culos")
st.sidebar.markdown("- Dicas gerais de automÃ³veis")
